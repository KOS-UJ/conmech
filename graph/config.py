import numpy as np
import torch
import torch.nn as nn

############

# Standardize data! (from -1 to 1)
DIM = 2

DENS = 0.01
MU = 0.01
LA = 0.01
TH = 0.01
ZE = 0.01


TRAIN_CORNERS = np.array([0.0, 0.0, 1.0, 1.0])
PRINT_CORNERS = np.array([0.0, 0.0, 1.0, 1.0])

############

MESH_TYPE = "pygmsh"  # "meshzoo" #"pygmsh" #"dmsh" #"cross"
MESH_SIZE_MIN = 8  # 25
MESH_SIZE_MAX = MESH_SIZE_MIN
MESH_SIZE_PRINT = 8  # 16
MESH_SIZE_VALIDATION = 8  # 16

TIMESTEP = 0.01

############

FORCES_RANDOM_SCALE = 1.3
U_RANDOM_SCALE = 0.2
V_RANDOM_SCALE = 2.5

DATA_ZERO_FORCES = 0.9
DATA_ROTATE_VELOCITY = 0.5

U_NOISE_GAMMA = 0.1
U_IN_RANDOM_FACTOR = 0.005 * U_RANDOM_SCALE
V_IN_RANDOM_FACTOR = 0.005 * V_RANDOM_SCALE

############

DRAW_FINAL_TIME = 8.
DRAW_EPISODE_STEPS = int(DRAW_FINAL_TIME / TIMESTEP)

############

VAL_ROLLOUT_AT_EPOCHS = 10
DRAW_AT_MINUTES = 30
DRAW_SKIP = 0.05
DRAW_DETAILED = True

# TRAIN_ITERATIONS = 2
BATCH_SIZE = 128  # 16 #64 #128
BATCHES_IN_EPOCH = 32  # 64
TRAIN_SOLVERS_COUNT = BATCH_SIZE * BATCHES_IN_EPOCH
BASE_SETTINGS_COUNT = 20


############


DROPOUT_RATE = 0.1  # 0.05
SKIP = True
# GRADIENT_CLIP = 10.0

ACTIVATION = nn.PReLU()  # ReLU
ATTENTION_HEADS = 1  # None 1 3 5

INITIAL_LR = 1e-4
LR_GAMMA = 0.999
FINAL_LR = 1e-6

LATENT_DIM = 128
PROC_LAYER_COUNT = 1
ENC_LAYER_COUNT = 2
DEC_LAYER_COUNT = 3
MESSAGE_PASSES = 3  # 10


VERTEX_DATA_DIM = 9
EDGE_DATA_DIM = 11
ALL_VERTEX_DIM = LATENT_DIM + VERTEX_DATA_DIM + DIM
