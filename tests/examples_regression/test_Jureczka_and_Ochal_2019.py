import numpy as np

from conmech.problem_solver import Static as StaticProblem
from examples.Jureczka_and_Ochal_2019 import StaticSetup

setup = StaticSetup()
runner = StaticProblem(setup, "global")


def test_global_optimization_solver():
    expected_displacement_vector = \
        [-0.04262966608908394, -0.06807464585863754, -0.08973736846094768, -0.10690408694046236,
         -0.11916324052761262, -0.1263422210478775, -0.1283445027600056, -0.12591303077194524,
         -0.15688454280661035, -0.1541432205911532, -0.14580127026456693, -0.131912438322659,
         -0.1385694231034282, -0.13886215373475458, -0.13313428306641087, -0.12137889467262303,
         -0.11483931020002523, -0.11805929464038825, -0.11496374451271049, -0.10566650774803418,
         -0.08613634279070967, -0.09127916374606408, -0.09069405669954161, -0.08453220568526318,
         -0.053422027027724875, -0.05804828384157624, -0.05883017771414198, -0.05840512799524102,
         -0.017095439824663588, -0.019520875074514513, -0.02016577981002282, -0.020681915080079195,
         -0.17094966894508967, -0.16236830595223403, -0.14812343969762556, -0.16282253246972983,
         -0.15615610601720836, -0.14379029250334718, -0.14892923529301536, -0.1448033114572523,
         -0.13484550643569973, -0.12951769105072547, -0.12812610512714773, -0.1207188975973902,
         -0.10461468870205626, -0.10556209429913253, -0.10096051413402012, -0.07424180732461623,
         -0.07611201700921189, -0.07496535239472545, -0.03834042594728897, -0.04014479776853153,
         -0.039950328636229535, -0.17557657779126645, -0.1683554804773385, -0.15632026912753944,
         -0.13835674204165135, -0.16941483754938572, -0.16406540513390505, -0.15348328190901503,
         -0.13733451237200575, -0.14742683419782973, -0.1626511578844886, -0.17271375315825194,
         -0.17893898359689256, -0.17526368456078986, -0.16444388254922737, -0.14729340610379577,
         -0.12449245368686196, -0.09667431721236097, -0.0651230304288281, -0.03222802976669187,
         -0.03218261989769327, -0.03495967295700039, -0.038095929662151654, -0.038915316833628796,
         -0.038254887689529164, -0.03569186263672212, -0.03062052910569789, -0.01632289670524212,
         -0.054593221740664624, -0.05533330609809283, -0.05150554511937047, -0.043049818116587674,
         -0.051069981510741394, -0.05358176178099284, -0.05129116773087683, -0.04410308144530016,
         -0.0435061590439293, -0.048073739181730274, -0.048124217131998444, -0.04312462312387669,
         -0.031809068556114595, -0.038642848692142906, -0.042034642537779596, -0.04012134507868441,
         -0.016725084469647777, -0.02550162117915109, -0.031086454747512513, -0.03474866035544511,
         -0.004131180564513207, -0.009088893525976983, -0.012380613936386148, -0.014788558898074823,
         -0.05216291812604852, -0.0482049436855153, -0.04089897669354276, -0.055589083464732056,
         -0.05331112332691517, -0.04674512326623273, -0.05494199942100743, -0.05413743353800421,
         -0.048541162766842096, -0.05035356686839115, -0.05144354500714253, -0.0476838975322876,
         -0.04178591942699682, -0.04545909633073013, -0.044424182642177665, -0.029093185715769746,
         -0.03568845791798192, -0.038756042151582355, -0.01406048992283551, -0.02111393675836036,
         -0.026227951087699895, -0.05004232168442546, -0.046628619575824565, -0.039333739629829806,
         -0.02959570871335847, -0.054122465118310474, -0.05307721755167785, -0.04804575666897824,
         -0.03930131444415101, -0.02758966577148551, -0.03806831031941721, -0.04525435669852998,
         -0.04771747577444213, -0.05199559539387772, -0.053312597387148886, -0.05081728372207821,
         -0.04438903861083346, -0.03395521087324656, -0.019729422172065456, -0.003437097092182522
         ]
    runner.solving_method = "global optimization"
    result = runner.solve(fixed_point_abs_tol=0.001)
    displacement_vector = result.displacement.T.reshape(1, -1)[0]
    output = ", ".join((str(v) for v in displacement_vector))
    print(output)
    np.testing.assert_array_almost_equal(displacement_vector, expected_displacement_vector,
                                         decimal=6)


def test_schur_complement_solver():
    expected_displacement_vector = \
        [-0.04262966608908394, -0.06807464585863754, -0.08973736846094768, -0.10690408694046236,
         -0.11916324052761262, -0.1263422210478775, -0.1283445027600056, -0.12591303077194524,
         -0.15688454280661035, -0.1541432205911532, -0.14580127026456693, -0.131912438322659,
         -0.1385694231034282, -0.13886215373475458, -0.13313428306641087, -0.12137889467262303,
         -0.11483931020002523, -0.11805929464038825, -0.11496374451271049, -0.10566650774803418,
         -0.08613634279070967, -0.09127916374606408, -0.09069405669954161, -0.08453220568526318,
         -0.053422027027724875, -0.05804828384157624, -0.05883017771414198, -0.05840512799524102,
         -0.017095439824663588, -0.019520875074514513, -0.02016577981002282, -0.020681915080079195,
         -0.17094966894508967, -0.16236830595223403, -0.14812343969762556, -0.16282253246972983,
         -0.15615610601720836, -0.14379029250334718, -0.14892923529301536, -0.1448033114572523,
         -0.13484550643569973, -0.12951769105072547, -0.12812610512714773, -0.1207188975973902,
         -0.10461468870205626, -0.10556209429913253, -0.10096051413402012, -0.07424180732461623,
         -0.07611201700921189, -0.07496535239472545, -0.03834042594728897, -0.04014479776853153,
         -0.039950328636229535, -0.17557657779126645, -0.1683554804773385, -0.15632026912753944,
         -0.13835674204165135, -0.16941483754938572, -0.16406540513390505, -0.15348328190901503,
         -0.13733451237200575, -0.14742683419782973, -0.1626511578844886, -0.17271375315825194,
         -0.17893898359689256, -0.17526368456078986, -0.16444388254922737, -0.14729340610379577,
         -0.12449245368686196, -0.09667431721236097, -0.0651230304288281, -0.03222802976669187,
         -0.03218261989769327, -0.03495967295700039, -0.038095929662151654, -0.038915316833628796,
         -0.038254887689529164, -0.03569186263672212, -0.03062052910569789, -0.01632289670524212,
         -0.054593221740664624, -0.05533330609809283, -0.05150554511937047, -0.043049818116587674,
         -0.051069981510741394, -0.05358176178099284, -0.05129116773087683, -0.04410308144530016,
         -0.0435061590439293, -0.048073739181730274, -0.048124217131998444, -0.04312462312387669,
         -0.031809068556114595, -0.038642848692142906, -0.042034642537779596, -0.04012134507868441,
         -0.016725084469647777, -0.02550162117915109, -0.031086454747512513, -0.03474866035544511,
         -0.004131180564513207, -0.009088893525976983, -0.012380613936386148, -0.014788558898074823,
         -0.05216291812604852, -0.0482049436855153, -0.04089897669354276, -0.055589083464732056,
         -0.05331112332691517, -0.04674512326623273, -0.05494199942100743, -0.05413743353800421,
         -0.048541162766842096, -0.05035356686839115, -0.05144354500714253, -0.0476838975322876,
         -0.04178591942699682, -0.04545909633073013, -0.044424182642177665, -0.029093185715769746,
         -0.03568845791798192, -0.038756042151582355, -0.01406048992283551, -0.02111393675836036,
         -0.026227951087699895, -0.05004232168442546, -0.046628619575824565, -0.039333739629829806,
         -0.02959570871335847, -0.054122465118310474, -0.05307721755167785, -0.04804575666897824,
         -0.03930131444415101, -0.02758966577148551, -0.03806831031941721, -0.04525435669852998,
         -0.04771747577444213, -0.05199559539387772, -0.053312597387148886, -0.05081728372207821,
         -0.04438903861083346, -0.03395521087324656, -0.019729422172065456, -0.003437097092182522
         ]
    runner.solving_method = "schur"
    result = runner.solve(fixed_point_abs_tol=0.001)
    displacement_vector = result.displacement.T.reshape(1, -1)[0]
    output = ", ".join((str(v) for v in displacement_vector))
    print(output)
    np.testing.assert_array_almost_equal(displacement_vector, expected_displacement_vector,
                                         decimal=6)
